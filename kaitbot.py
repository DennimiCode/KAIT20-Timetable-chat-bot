import sqlite3
from random import randrange as random
import datetime
import pyowm
from pyowm.commons.enums import SubscriptionTypeEnum
from pyowm.utils.measurables import kelvin_to_celsius
from tokens import Your_WeatherToken

database = sqlite3.connect('data.db')
cursor = database.cursor()

Supports = {1:"xvanche", 2:"fraybyl", 3:"dennimi", 4:"id219093647", 5:"1nigm4"}
weekdays={1:'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',2:'–í—Ç–æ—Ä–Ω–∏–∫',3:'–°—Ä–µ–¥–∞',4:'–ß–µ—Ç–≤–µ—Ä–≥',5:'–ü—è—Ç–Ω–∏—Ü–∞'}

config = {
	'subscription_type': SubscriptionTypeEnum.FREE,
	'language': 'ru',
	'connection': {
		'use_ssl': True,
		'verify_ssl_certs': True,
		'use_proxy': False,
		'timeout_secs': 5
	},
	'proxies': {
		'http': 'http://user:pass@host:port',
		'https': 'socks5://user:pass@host:port'
	}
}

class KaitBot:
	def __init__(self,user_id,session_api,peer_id, chat_id):
		self.user_id = user_id
		self.session_api = session_api
		self.peer_id = peer_id
		self.chat_id = chat_id
		self.commands = ['–Ω–∞—á–∞—Ç—å','—Å—Ç–∞—Ç—É—Å','–∏–Ω—Ñ–æ','–Ω–µ–¥–µ–ª—è','–ø–æ–≥–æ–¥–∞','–∑–≤–æ–Ω–∫–∏','–ø–∞—Ä—ã','—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
						,'–≥—Ä—É–ø–ø–∞','–ø–≥','–∫–∏–∫','–∫—É—Ä–∞—Ç–æ—Ä','—Å—Ç–∞—Ä–æ—Å—Ç–∞','—Å—Ç—É–¥–µ–Ω—Ç']

	def new_message(self, message):
		self.check_user_exist(self.user_id)
		if (message in self.commands) or (message.split()[0] in self.commands):
			# –ï—Å–ª–∏ –≤ –±–µ—Å–µ–¥–µ, –∏–Ω–∞—á–µ –≤ –õ–°			
			if self.peer_id!=self.user_id: peer = True
			else: peer = False

			if message == '–Ω–∞—á–∞—Ç—å': return '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —É–∫–∞–∂–∏—Ç–µ:\n1. –ì—Ä—É–ø–ø—É - –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã\n2. –ü–æ–¥–≥—Ä—É–ø–ø—É - –ø–≥ ‚Ññ–ø–æ–¥–≥—Ä—É–ø–ø—ã\n\n–ò–Ω—Ñ–æ - –≤—ã–≤–æ–¥ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥'
			elif message.split()[0] == "—Å—Ç–∞—Ç—É—Å":
				try: selected_user_id = int(message.split()[1].replace('[id',"").split('|')[0])
				except: selected_user_id = self.user_id
				return self.get_user(selected_user_id)
			elif message == '–∏–Ω—Ñ–æ':
				Support = Supports[random(1,6)]
				if peer == True:
					if self.check_permisson(self.user_id) == True: return f'–ì—Ä—É–ø–ø–∞ - –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –Æ–Ω–∏–æ—Ä\n–ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã - —Å—Ç–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º –≥—Ä—É–ø–ø—ã\n–°—Ç–∞—Ç—É—Å - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ\n–ü–æ–≥–æ–¥–∞ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥. –ú–æ—Å–∫–≤–µ\n–ü–æ–≥–æ–¥–∞ –≥–æ—Ä–æ–¥ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏)\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é\n–ü–∞—Ä—ã - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n–ó–≤–æ–Ω–∫–∏ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤\n–ù–µ–¥–µ–ª—è - –≤—ã–≤–æ–¥ —á—ë—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏(–ù–ï–ß–ï–¢–ù–ê–Ø, –ß–Å–¢–ù–ê–Ø)\n–°—Ç—É–¥–µ–Ω—Ç @id - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ\n–ö–∏–∫ @id - –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ—Å–µ–¥—ã\n–°—Ç—É–¥–µ–Ω—Ç—ã - –≤—ã–≤–æ–¥ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ\n–ö—É—Ä–∞—Ç–æ—Ä @id - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—É—Ä–∞—Ç–æ—Ä–æ–º\n–°—Ç–∞—Ä–æ—Å—Ç–∞ @id - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ç–∞—Ä–æ—Å—Ç–æ–π\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ: vk.com/{Support}'
					elif self.check_state(self.user_id) == True: return f'–ì—Ä—É–ø–ø–∞ - –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –Æ–Ω–∏–æ—Ä\n–ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã - —Å—Ç–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º –≥—Ä—É–ø–ø—ã\n–°—Ç–∞—Ç—É—Å - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ\n–ü–æ–≥–æ–¥–∞ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥. –ú–æ—Å–∫–≤–µ\n–ü–æ–≥–æ–¥–∞ –≥–æ—Ä–æ–¥ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏)\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é\n–ü–∞—Ä—ã - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n–ó–≤–æ–Ω–∫–∏ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤\n–ù–µ–¥–µ–ª—è - –≤—ã–≤–æ–¥ —á—ë—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏(–ù–ï–ß–ï–¢–ù–ê–Ø, –ß–Å–¢–ù–ê–Ø)\n–°—Ç—É–¥–µ–Ω—Ç @id - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ\n–ö–∏–∫ @id - –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ—Å–µ–¥—ã\n–°—Ç—É–¥–µ–Ω—Ç—ã - –≤—ã–≤–æ–¥ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ: vk.com/{Support}'
					else: return f'–ì—Ä—É–ø–ø–∞ - –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –Æ–Ω–∏–æ—Ä\n–ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã - —Å—Ç–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º –≥—Ä—É–ø–ø—ã\n–°—Ç–∞—Ç—É—Å - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ\n–ü–æ–≥–æ–¥–∞ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥. –ú–æ—Å–∫–≤–µ\n–ü–æ–≥–æ–¥–∞ –≥–æ—Ä–æ–¥ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏)\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é\n–ü–∞—Ä—ã - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n–ó–≤–æ–Ω–∫–∏ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤\n–ù–µ–¥–µ–ª—è - –≤—ã–≤–æ–¥ —á—ë—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏(–ù–ï–ß–ï–¢–ù–ê–Ø, –ß–Å–¢–ù–ê–Ø)\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ: vk.com/{Support}'
				else: return f'–ì—Ä—É–ø–ø–∞ - –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –Æ–Ω–∏–æ—Ä\n–ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã - —Å—Ç–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º –≥—Ä—É–ø–ø—ã\n–°—Ç–∞—Ç—É—Å - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ\n–ü–æ–≥–æ–¥–∞ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥. –ú–æ—Å–∫–≤–µ\n–ü–æ–≥–æ–¥–∞ –≥–æ—Ä–æ–¥ - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ(–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏)\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é\n–ü–∞—Ä—ã - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n–ó–≤–æ–Ω–∫–∏ - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤\n–ù–µ–¥–µ–ª—è - –≤—ã–≤–æ–¥ —á—ë—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏(–ù–ï–ß–ï–¢–ù–ê–Ø, –ß–Å–¢–ù–ê–Ø)\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ: vk.com/{Support}'
			elif message == '–Ω–µ–¥–µ–ª—è': return self.check_week_and_weekday()
			elif message.split()[0] == '–ø–æ–≥–æ–¥–∞':
				try:city = message.split()[1]
				except:city = '–º–æ—Å–∫–≤–∞' 
				return self.get_weather(city)
			elif message == '–∑–≤–æ–Ω–∫–∏': return self.get_bells()
			elif message == '–ø–∞—Ä—ã': return self.get_lecture()
			elif message == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ': return self.get_schedule()
			elif message.split()[0] == '–≥—Ä—É–ø–ø–∞':
				try: group=message.split()[1].upper()
				except:group=''
				return self.add_group(group)
			elif message.split()[0] == '–ø–≥':
				try: subGroup = message.split()[1]
				except: return '–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–≥—Ä—É–ø–ø—ã - 1, 2'
				return self.add_subgroup(subGroup)
			elif message.split()[0] == '–∫–∏–∫':
				if peer == True:
					if self.check_permisson(self.user_id)==True or self.check_state(self.user_id)=='–ö—É—Ä–∞—Ç–æ—Ä' or self.check_state(self.user_id)=='–°—Ç–∞—Ä–æ—Å—Ç–∞':
						try: selected_user_id = int(message.split()[1].replace('[id',"").split('|')[0])
						except: return '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–ü—Ä–∏–º–µ—Ä: –∫–∏–∫ @kait20official'
						return self.kick_user(selected_user_id)
					return '–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–∫–ª—é—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!'
				else: return '–î–∞–Ω–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∑–¥–µ—Å—å'
			elif message.split()[0] == '–∫—É—Ä–∞—Ç–æ—Ä' or message.split()[0] == '—Å—Ç–∞—Ä–æ—Å—Ç–∞' or message.split()[0] == '—Å—Ç—É–¥–µ–Ω—Ç':
				if peer == True:
					if self.check_permisson(self.user_id)==True:
						state = message.split()[0].title()
						try: selected_user_id = int(message.split()[1].replace('[id',"").split('|')[0])
						except: return f'–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–ü—Ä–∏–º–µ—Ä: {state} @kait20official'
						return self.add_state(selected_user_id,state)
		self.get_fullname(self.user_id)
		print(f'[{self.selected_username}] {message}')
		return False

	def check_user_exist(self,selected_user_id):
		if cursor.execute('SELECT id FROM Users WHERE id=%s'%selected_user_id).fetchone() is None:
			cursor.execute('INSERT INTO Users(id,state) VALUES(%s,"–°—Ç—É–¥–µ–Ω—Ç")'%selected_user_id)
			database.commit()

	def check_week_and_weekday(self):
		now = datetime.datetime.now()
		self.weekDay = now.isoweekday()
		weekNum = datetime.date(now.year, now.month, now.day).isocalendar()[1]
		if weekNum % 2 == 0: self.weekNum = '–ß–Å–¢–ù–ê–Ø'
		else: self.weekNum = '–ù–ï–ß–ï–¢–ù–ê–Ø'
		return f"–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: {weekNum}"

	def get_weather(self,city):
		self.check_week_and_weekday()
		infoMsg=''
		if self.weekDay <= 5 and city != "–º–æ—Å–∫–≤–∞":
			city='–º–æ—Å–∫–≤–∞'
			infoMsg="–í –±—É–¥–Ω–∏–µ –¥–Ω–∏, –ø–æ–≥–æ–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥–æ—Ä–æ–¥–µ –ú–æ—Å–∫–≤–∞"
		elif self.weekDay <= 5:city == "–º–æ—Å–∫–≤–∞"
		try:
			if city == "–ø–∏—Ç–µ—Ä" or city == "—Å–ø–±" or city == "–ø–µ—Ç–µ—Ä–±—É—Ä–≥":
				city = "—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"
			PyOwm = pyowm.OWM(Your_WeatherToken, config=config)
			weatherManager = PyOwm.weather_manager()
			observation = weatherManager.weather_at_place(city)
			Weather = observation.weather

			windDeg = int(Weather.wind()['deg'])
			if windDeg == 0:windLine = "–ó–∞–ø–∞–¥–Ω—ã–π"
			elif windDeg == 45:windLine = "–°–µ–≤–µ—Ä–Ω—ã–π"
			elif windDeg == 90:windLine = "–í–æ—Å—Ç–æ—á–Ω—ã–π"
			elif windDeg == 135:windLine = "–Æ–∂–Ω—ã–π"
			elif windDeg > 0 and int(Weather.wind()['deg']) < 45:windLine = "–°–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π"
			elif windDeg > 45 and int(Weather.wind()['deg']) < 90:windLine = "–°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π"
			elif windDeg > 90 and int(Weather.wind()['deg']) < 135:windLine = "–Æ–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π"
			elif windDeg > 135 and int(Weather.wind()['deg']) != 0:windLine = "–Æ–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π"

			weatherStatus = Weather.detailed_status
			if weatherStatus == "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å":weatherStatus = "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß"
			elif weatherStatus == "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":weatherStatus = "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å ‚òÅ"
			elif weatherStatus == "–ø–∞—Å–º—É—Ä–Ω–æ":weatherStatus = "–ø–∞—Å–º—É—Ä–Ω–æ ‚òÅ"
			elif weatherStatus == "–ø–ª–æ—Ç–Ω—ã–π —Ç—É–º–∞–Ω":weatherStatus = "–ø–ª–æ—Ç–Ω—ã–π —Ç—É–º–∞–Ω üå´"
			elif weatherStatus == "—è—Å–Ω–æ":weatherStatus = "—è—Å–Ω–æ ‚òÄ"
			elif weatherStatus == " –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":weatherStatus = " –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ ‚õÖ"

			return ("–ü–æ–≥–æ–¥–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ: " + observation.location.name + "\n" +
					"–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: " + weatherStatus + "\n" +
					"üí® –í–µ—Ç–µ—Ä: " + str(Weather.wind()['speed']) + " –º/—Å" + ", " + windLine + "\n" +
					"üí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + str(Weather.humidity) + " %" + "\n" +
					"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(round(kelvin_to_celsius(Weather.temp['temp']))) + " ‚ÑÉ" + " –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: " + str(
					round(kelvin_to_celsius(Weather.temp['feels_like']))) + " ‚ÑÉ" + "\n" +
					"üå°‚Üë –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–Ω–µ–º: " + str(round(kelvin_to_celsius(Weather.temp['temp_max']))) + " ‚ÑÉ" + "\n" +
					"üå°‚Üì –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—á—å—é: " + str(round(kelvin_to_celsius(Weather.temp['temp_min']))) + " ‚ÑÉ" + f"\n\n{infoMsg}")
		except: return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."

	def check_permisson(self,selected_user_id):
		for id in self.session_api.messages.getConversationMembers(peer_id=self.peer_id)["items"]:
			if id["member_id"] == selected_user_id:
				if id.get('is_admin', False)==True:
					return True
				return False
	
	def check_group(self,selected_user_id):
		if cursor.execute('SELECT groups FROM Users WHERE id=%s'%selected_user_id).fetchone()[0] is None:
			return '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
		return cursor.execute('SELECT groups FROM Users WHERE id=%s'%selected_user_id).fetchone()[0]

	def check_subgroup(self,selected_user_id):
		if cursor.execute('SELECT pg FROM Users WHERE id=%s'%selected_user_id).fetchone()[0] is None:
			return "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"
		return cursor.execute('SELECT pg FROM Users WHERE id=%s'%selected_user_id).fetchone()[0]
	
	def check_thread(self,selected_user_id):
		if cursor.execute('SELECT thread FROM Users WHERE id=%s'%selected_user_id).fetchone()[0] is None:
			return '-'
		return cursor.execute('SELECT thread FROM Users WHERE id=%s'%selected_user_id).fetchone()[0]
	
	def check_state(self,selected_user_id):
		return cursor.execute('SELECT state FROM Users WHERE id=%s'%selected_user_id).fetchone()[0]

	def check_all_groups(self):
		groupslist=[]
		for group in cursor.execute('SELECT groups FROM Schedule').fetchall():
			groupslist.append(group[0])
		return groupslist
	
	def get_user(self,selected_user_id):
		self.check_user_exist(selected_user_id)
		self.get_fullname(selected_user_id)
		return f"[{self.check_state(selected_user_id)}] {self.selected_username}:\n–ì—Ä—É–ø–ø–∞: {self.check_group(selected_user_id)}\n–ü–æ–¥–≥—Ä—É–ø–ø–∞: {self.check_subgroup(selected_user_id)}\n–ü–æ—Ç–æ–∫: {self.check_thread(selected_user_id)}"

	def get_fullname(self,selected_user_id):
		first_name = self.session_api.users.get(user_ids = selected_user_id)[0]['first_name']
		last_name = self.session_api.users.get(user_ids = selected_user_id)[0]['last_name']
		self.selected_username = f'{str(first_name)} {str(last_name)}'

	def get_schedule(self):
		self.check_week_and_weekday()
		group=self.check_group(self.user_id)
		if group != '–Ω–µ —É–∫–∞–∑–∞–Ω–∞':
			subGroup = self.check_subgroup(self.user_id)
			if subGroup != '-':
				Schedule=cursor.execute('SELECT "All" FROM Schedule WHERE groups="%s"'%group).fetchone()[0]
				schedule = []
				n = 1
				while n != 6:
					smile='‚úè'
					if n == 1:schedule.append(f'[{group}-{subGroup}] –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n{smile}{weekdays[n]}\n{Schedule.split(weekdays[n])[1].split(f"{self.weekNum}{subGroup}")[1]}')
					else:schedule.append(f'\n{smile}{weekdays[n]}\n{Schedule.split(weekdays[n])[1].split(f"{self.weekNum}{subGroup}")[1]}')
					n += 1
				n = 0
				schedule="".join(schedule)
				return schedule
		return '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é:\n1. –ì—Ä—É–ø–ø–∞ - –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã\n2. –ü–æ–¥–≥—Ä—É–ø–ø–∞ - –ø–≥ ‚Ññ–ø–æ–¥–≥—Ä—É–ø–ø—ã\n\n–ò–Ω—Ñ–æ - –≤—ã–≤–æ–¥ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥'

	def get_bells(self):
		group = self.check_group(self.user_id)
		if group != '–Ω–µ —É–∫–∞–∑–∞–Ω–∞':
			thread = self.check_thread(self.user_id)
			if thread != '-':
				return cursor.execute('SELECT bells FROM Threads WHERE thread="%s"'%thread).fetchone()[0]
		return '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é:\n1. –ì—Ä—É–ø–ø–∞ - –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã\n2. –ü–æ–¥–≥—Ä—É–ø–ø–∞ - –ø–≥ ‚Ññ–ø–æ–¥–≥—Ä—É–ø–ø—ã\n\n–ò–Ω—Ñ–æ - –≤—ã–≤–æ–¥ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥'

	def get_lecture(self):
		group = self.check_group(self.user_id)
		if group != '–Ω–µ —É–∫–∞–∑–∞–Ω–∞':
			self.check_week_and_weekday()
			if self.weekDay>5:
				return '–û—Ç–¥—ã—Ö–∞–π :D –°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –ø–∞—Ä'
			else:
				subGroup = self.check_subgroup(self.user_id)
				if subGroup != '-':
					schedule=cursor.execute('SELECT "All" FROM Schedule WHERE groups="%s"'%group).fetchone()[0]
					return f'[{group}-{subGroup}] –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n{schedule.split(weekdays[self.weekDay])[1].split(f"{self.weekNum}{subGroup}")[1]}'
		return '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é:\n1. –ì—Ä—É–ø–ø–∞ - –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã\n2. –ü–æ–¥–≥—Ä—É–ø–ø–∞ - –ø–≥ ‚Ññ–ø–æ–¥–≥—Ä—É–ø–ø—ã\n\n–ò–Ω—Ñ–æ - –≤—ã–≤–æ–¥ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥'

	def add_group(self,group):
		if group == self.check_group(self.user_id):
			return '–¢—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ!'
		groupslist = self.check_all_groups()
		if group in groupslist:
			cursor.execute('UPDATE Users SET groups="%s" WHERE id=%s'%(group,self.user_id))
			if group.find('–ò–°–ü') >= False: thread = 1
			else: thread = 2
			cursor.execute('UPDATE Users SET thread=%s WHERE id=%s'%(thread,self.user_id))
			database.commit()
			return f'–¢–µ–ø–µ—Ä—å –í—ã —É—á–∞—Å—Ç–Ω–∏–∫ –≥—Ä—É–ø–ø—ã {group}'
		return f'–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã: {", ".join(groupslist)}'

	def add_subgroup(self,subGroup):
		if int(subGroup) == self.check_subgroup(self.user_id):
			return f'–¢—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –ø–æ–¥–≥—Ä—É–ø–ø–µ {subGroup}'
		if subGroup == "1" or subGroup == "2":
			cursor.execute('UPDATE Users SET pg=%s WHERE id=%s'%(subGroup,self.user_id))
			database.commit()
			return '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ø–æ–¥–≥—Ä—É–ø–ø—É %s'%subGroup
		return '–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–≥—Ä—É–ø–ø—ã - 1, 2'

	def add_state(self,selected_user_id,state):
		self.check_user_exist(selected_user_id)
		self.get_fullname(selected_user_id)
		cursor.execute('UPDATE Users SET state="%s" WHERE id=%d'%(state,selected_user_id))
		database.commit()
		return f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id{selected_user_id}({self.selected_username}) –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å {state}!'

	def kick_user(self,selected_user_id):
		try:
			if self.check_permisson(selected_user_id)!=True:
				self.session_api.messages.removeChatUser(chat_id = self.chat_id,user_id = selected_user_id,random_id = 0)
				self.get_fullname(selected_user_id)
				return f'@id{selected_user_id}({self.selected_username}) –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ—Å–µ–¥—ã'
			else: return '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
		except: return '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–ü—Ä–∏–º–µ—Ä: –∫–∏–∫ @kait20official'