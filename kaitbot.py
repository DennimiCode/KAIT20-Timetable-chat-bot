# coding=UTF-8
from datetime import datetime, date, time
import vk_api, random
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.utils import get_random_id
import sqlite3
import requests
import json
import pyowm
from pyowm.commons.enums import SubscriptionTypeEnum
from pyowm.utils.measurables import kelvin_to_celsius

bd = sqlite3.connect('data.db')
c = bd.cursor()

config = {
    'subscription_type': SubscriptionTypeEnum.FREE,
    'language': 'ru',
    'connection': {
        'use_ssl': True,
        'verify_ssl_certs': True,
        'use_proxy': False,
        'timeout_secs': 5
    },
    'proxies': {
        'http': 'http://user:pass@host:port',
        'https': 'socks5://user:pass@host:port'
    }
}

my_token = '2fa2b46a0a27c25145b623649a2143fb8dff601d5f4150997ed9e0d9d9ee9f1bacb0d052cf9febc97e055'

vk_session = vk_api.VkApi(token = my_token)
session_api = vk_session.get_api()
longpoll = VkBotLongPoll(vk_session, '200587301')

def get_but(text, color):
	return {
		"action": {
			"type": "text",
			"payload": "{\"button\": \"" + "1" + "\"}",
			"label": f"{text}"
		},
		"color": f"{color}"
	}

grouplist=[]
for group in c.execute('SELECT groups FROM Schedule').fetchall():
	grouplist.append(group[0])
weekdays={1:'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',2:'–í—Ç–æ—Ä–Ω–∏–∫',3:'–°—Ä–µ–¥–∞',4:'–ß–µ—Ç–≤–µ—Ä–≥',5:'–ü—è—Ç–Ω–∏—Ü–∞'}

keyboard = {
	"one_time": True,
	"buttons": [
		[get_but('üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', 'default'), get_but('üóí –ü–∞—Ä—ã', 'default')],
		[get_but('üîî –ó–≤–æ–Ω–∫–∏', 'default'), get_but('üå° –ü–æ–≥–æ–¥–∞', 'default')]
	]
}
keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
keyboard = str(keyboard.decode('utf-8'))

vkDict = {1:"xvanche", 2:"fraybyl", 3:"dennimi", 4:"id219093647", 5:"1nigm4"} 

def week():
	global nowDay
	nowDay = datetime.today().isoweekday() 
	nowWeek = requests.get("http://junior.ru/—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ/").text.split('–≠—Ç–∞ –Ω–µ–¥–µ–ª—è ')[1].split('(')[0]
	if nowWeek=='—á–µ—Ç–Ω–∞—è':
		return '–ß–Å–¢–ù–ê–Ø'
	return '–ù–ï–ß–ï–¢–ù–ê–Ø'

def sender(id, text):
	try: 
		session_api.messages.send(
			key = (chat_key),
			server = (chat_server),
			ts=(chat_ts),
			random_id = get_random_id(),
			message=text,
			chat_id = event.chat_id,
			keyboard=keyboard
		)
	except:
		if peer_id=='':
			vk_session.method('messages.send', {'user_id' : id, 'message' : text, 'random_id' : 0, 'keyboard': keyboard})
		else:
			session_api.messages.send(peer_id=peer_id,message=text,random_id=0, keyboard=keyboard)

def weather(city):
	city.lower()
	if nowDay == 6 or 7:
		city = city
	elif nowDay != 6 or 7 and city == "–º–æ—Å–∫–≤–∞":
		city == "–º–æ—Å–∫–≤–∞"
	elif nowDay != 6 or 7 and city != "–º–æ—Å–∫–≤–∞":
		sender(id, "–í –±—É–¥–Ω–∏–µ –¥–Ω–∏, –ø–æ–≥–æ–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥–æ—Ä–æ–¥–µ –ú–æ—Å–∫–≤–∞")
	try:
		if city == "–ø–∏—Ç–µ—Ä" or city == "—Å–ø–±" or city == "–ø–µ—Ç–µ—Ä–±—É—Ä–≥":
			city = "—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"
		owm = pyowm.OWM('2a6565823dc741847bd762b19114d062', config=config)
		mgr = owm.weather_manager()
		observation = mgr.weather_at_place(city)
		w = observation.weather

		if int(w.wind()['deg']) == 0:windLine = "–ó–∞–ø–∞–¥–Ω—ã–π"
		elif int(w.wind()['deg']) == 45:windLine = "–°–µ–≤–µ—Ä–Ω—ã–π"
		elif int(w.wind()['deg']) == 90:windLine = "–í–æ—Å—Ç–æ—á–Ω—ã–π"
		elif int(w.wind()['deg']) == 135:windLine = "–Æ–∂–Ω—ã–π"
		elif int(w.wind()['deg']) > 0 and int(w.wind()['deg']) < 45:windLine = "–°–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π"
		elif int(w.wind()['deg']) > 45 and int(w.wind()['deg']) < 90:windLine = "–°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π"
		elif int(w.wind()['deg']) > 90 and int(w.wind()['deg']) < 135:windLine = "–Æ–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π"
		elif int(w.wind()['deg']) > 135 and int(w.wind()['deg']) != 0:windLine = "–Æ–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π"

		if w.detailed_status == "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å":weaterStatus = "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß"
		elif w.detailed_status == "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":weaterStatus = "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å ‚òÅ"
		elif w.detailed_status == "–ø–∞—Å–º—É—Ä–Ω–æ":weaterStatus = "–ø–∞—Å–º—É—Ä–Ω–æ ‚òÅ"
		elif w.detailed_status == "–ø–ª–æ—Ç–Ω—ã–π —Ç—É–º–∞–Ω":weaterStatus = "–ø–ª–æ—Ç–Ω—ã–π —Ç—É–º–∞–Ω üå´"
		elif w.detailed_status == "—è—Å–Ω–æ":weaterStatus = "—è—Å–Ω–æ ‚òÄ"
		elif w.detailed_status == " –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":weaterStatus = " –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ ‚õÖ"
		else: weaterStatus = w.detailed_status

		sender(id, "–ü–æ–≥–æ–¥–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ: " + observation.location.name + "\n" +
				"–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: " + weaterStatus + "\n" +
				"üí® –í–µ—Ç–µ—Ä: " + str(w.wind()['speed']) + " –º/—Å" + ", " + windLine + "\n" +
				"üí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + str(w.humidity) + " %" + "\n" +
				"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(round(kelvin_to_celsius(w.temp['temp']))) + " ‚ÑÉ" + " –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: " + str(
				round(kelvin_to_celsius(w.temp['feels_like']))) + " ‚ÑÉ" + "\n" +
				"üå°‚Üë –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–Ω–µ–º: " + str(round(kelvin_to_celsius(w.temp['temp_max']))) + " ‚ÑÉ" + "\n" +
				"üå°‚Üì –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—á—å—é: " + str(round(kelvin_to_celsius(w.temp['temp_min']))) + " ‚ÑÉ")
	except: sender(id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

def check_user(id):
	if c.execute("SELECT id FROM Users WHERE id=%s"%id).fetchone() is None:
		c.execute('INSERT INTO Users(id,state) VALUES(%d,"–°—Ç—É–¥–µ–Ω—Ç")'%id)
		bd.commit()

def check_group(id):
	if c.execute('SELECT groups FROM Users WHERE id=%s'%id).fetchone()[0] is None:
		sender(id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ‚Ññ–≥—Ä—É–ø–ø—ã - –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã.')
		return False
	return c.execute('SELECT groups FROM Users WHERE id=%s'%id).fetchone()[0]

def check_thread(id):
	if c.execute('SELECT thread FROM Users WHERE id=%s'%id).fetchone()[0] is None:
		return False
	return c.execute('SELECT thread FROM Users WHERE id=%s'%id).fetchone()[0]

def check_pg(id):
	if c.execute('SELECT pg FROM Users WHERE id=%s'%id).fetchone()[0] is None:
		return "?"
	return c.execute('SELECT pg FROM Users WHERE id=%s'%id).fetchone()[0]

def check_state(id):
	if c.execute('SELECT state FROM Users WHERE id=%s'%id).fetchone()[0]=='–ö—É—Ä–∞—Ç–æ—Ä' or c.execute('SELECT state FROM Users WHERE id=%s'%id).fetchone()[0]=='–°—Ç–∞—Ä–æ—Å—Ç–∞':
		return True
	return False

def check_admin(iid):
	for ids in session_api.messages.getConversationMembers(peer_id = peer_id)["items"]:
		if ids["member_id"] == iid:
			admin = ids.get('is_admin', False)
			if admin == True:return True
			return False

def kick(id,iid):
	session_api.messages.removeChatUser(chat_id=event.chat_id,user_id=iid,random_id=0)
	FIO(iid)
	sender(id, f'@id{iid}({fullname}) –±—ã–ª –∫–∏–∫–Ω—É—Ç —Å –±–µ—Å–µ–¥—ã')

def check_student(id,iid):
	FIO(iid)
	if id==iid:
		sender(id, f"{name}, —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:\n–î–æ–ª–∂–Ω–æ—Å—Ç—å: {c.execute('SELECT state FROM Users WHERE id=%s'%id).fetchone()[0]}\n–ì—Ä—É–ø–ø–∞: {check_group(id)}\n–ü–æ–¥–≥—Ä—É–ø–ø–∞: {check_pg(id)}\n–ü–æ—Ç–æ–∫: {c.execute('SELECT thread FROM Users WHERE id=%s'%id).fetchone()[0]}")
	else:
		sender(id, f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {fullname}:\n–î–æ–ª–∂–Ω–æ—Å—Ç—å: {c.execute('SELECT state FROM Users WHERE id=%s'%iid).fetchone()[0]}\n–ì—Ä—É–ø–ø–∞: {check_group(iid)}\n–ü–æ–¥–≥—Ä—É–ø–ø–∞: {check_pg(iid)}\n–ü–æ—Ç–æ–∫: {c.execute('SELECT thread FROM Users WHERE id=%s'%iid).fetchone()[0]}")

def group(id):
	group=c.execute('SELECT groups FROM Users WHERE id=%s'%id).fetchone()[0]
	ids=[]
	for id in c.execute('SELECT id FROM Users WHERE groups="%s"'%group).fetchall():
		ids.append(id[0])
	text=''
	n=1
	for id in ids:
		FIO(id)
		pd=check_pg(id)
		text=text+f'{n}. {fullname} [{pd}]\n'
		n=n+1
	sender(id, text)

def FIO(id):
	global name,lastname,fullname
	name=session_api.users.get(user_ids = id)[0]['first_name']
	lastname=session_api.users.get(user_ids = id)[0]['last_name']
	fullname=f'{str(name)} {str(lastname)}'
	city=session_api.users.get(user_ids = id, fields= "city")[0]['city']['title']
try:
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			msg=event.object.message['text'].lower()
			if msg!='':
				peer_id=''
				chat=session_api.groups.getLongPollServer(group_id=200587301)
				chat_key=chat['key']
				chat_server=chat['server']
				chat_ts=chat['ts']
				peer_id=event.object.message['peer_id']
				id = event.object.message['from_id']
				check_user(id)
				for ids in session_api.messages.getConversationMembers(peer_id = peer_id)["items"]:
					if ids["member_id"] == id:
						admin = ids.get('is_admin', False)
						if admin == True:access=True
						else:access=False
						break
				FIO(id)
				print(f'[{name} {lastname}] {msg}')
				if msg.find("[club")>=0:
					msg=msg.split()
					del(msg[0])
					msg=' '.join(msg)
				if msg == '—Å—Ç–∞—Ç—É—Å':
					check_student(id,id)
				elif msg.find("–ø–æ–≥–æ–¥–∞")>=0:
					week()
					if msg=='üå° –ø–æ–≥–æ–¥–∞':weather("–º–æ—Å–∫–≤–∞")
					elif msg.split()[0]=='–ø–æ–≥–æ–¥–∞':
						try:weather(msg.split()[1])
						except:weather('–º–æ—Å–∫–≤–∞')
				elif msg == '–Ω–∞—á–∞—Ç—å':
					sender(id, '–ù–∞–ø–∏—à–∏—Ç–µ: –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã, –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º')
				elif msg == '–∏–Ω—Ñ–æ':
					randVK=vkDict[random.randrange(1,6)]
					FIO(randVK)
					#–¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –±–µ—Å–µ–¥—ã, –∫—É—Ä–∞—Ç–æ—Ä–∞ –∏ —Å—Ç–∞—Ä–æ—Å—Ç—ã
					if access==True:sender(id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n–ü–∞—Ä—ã - –≤—ã–≤–æ–¥–∏—Ç –ø–∞—Ä—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å\n–ó–≤–æ–Ω–∫–∏ - –≤—ã–≤–æ–¥–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤\n–ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã - –∏–∑–º–µ–Ω–∏—Ç—å ‚Ññ –≥—Ä—É–ø–ø—ã\n–ù–µ–¥–µ–ª—è - –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é(–ß–ï–¢–ù–ê–Ø, –ù–ï–ß–ï–¢–ù–ê–Ø)\n–°—Ç–∞—Ç—É—Å - –≤—ã–≤–µ–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –í–∞—Å\n–ö–∏–∫ @id? - –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ—Å–µ–¥—ã\n–°—Ç—É–¥–µ–Ω—Ç—ã - –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã\n–°—Ç—É–¥–µ–Ω—Ç @id? - –≤—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n–ü–æ–≥–æ–¥–∞ - –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ: vk.com/%s'%randVK)
					#–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
					else:sender(id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n–ü–∞—Ä—ã - –≤—ã–≤–æ–¥–∏—Ç –ø–∞—Ä—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å\n–ó–≤–æ–Ω–∫–∏ - –≤—ã–≤–æ–¥–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤\n–ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã - –∏–∑–º–µ–Ω–∏—Ç—å ‚Ññ –≥—Ä—É–ø–ø—ã\n–ù–µ–¥–µ–ª—è - –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é(–ß–ï–¢–ù–ê–Ø, –ù–ï–ß–ï–¢–ù–ê–Ø)\n–°—Ç–∞—Ç—É—Å - –≤—ã–≤–µ–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –í–∞—Å\n–ü–æ–≥–æ–¥–∞ - –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ\n–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ: vk.com/%s'%randVK)
				elif msg=="–Ω–µ–¥–µ–ª—è":
					sender(id, week())
				elif msg == "–∑–≤–æ–Ω–∫–∏"or msg=='üîî –∑–≤–æ–Ω–∫–∏':
					group=check_group(id)
					if group!=False:
						thread=check_thread(id)
						if thread!=False:
							sender(id, c.execute('SELECT bells FROM Threads WHERE thread="%s"'%thread).fetchone()[0])
						else:sender(id, '–ù–∞–ø–∏—à–∏—Ç–µ: –ì—Ä—É–ø–ø–∞ ‚Ññ–≥—Ä—É–ø–ø—ã, –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º')
				elif msg == "–ø–∞—Ä—ã" or msg=='üóí –ø–∞—Ä—ã':
					group=check_group(id)
					if group!=False:
						week()
						nowDay=1
						if nowDay>5:
							sender(id, '–û—Ç–¥—ã—Ö–∞–π :D –°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –ø–∞—Ä')
						else:
							pg=check_pg(id)
							if pg!='?':
								text=c.execute('SELECT "All" FROM Schedule WHERE groups="%s"'%group).fetchone()[0]
								sender(id, f'[{group}-{pg}] –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n{text.split(weekdays[nowDay])[1].split(f"{week()}{pg}")[1]}')
							else:
								sender(id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ø–æ–¥–≥—Ä—É–ø–ø—É\n–ü–≥ ‚Ññ–ø–æ–¥–≥—Ä—É–ø–ø—ã')
				elif msg == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" or msg=='üóì —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
					group=check_group(id)
					if group!=False:
						pg=check_pg(id)
						if pg!='?':
							text=c.execute('SELECT "All" FROM Schedule WHERE groups="%s"'%group).fetchone()[0]
							n=1
							schedule=[]
							while n!=6:
								if n==1:schedule.append(f'[{group}-{pg}] –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n{weekdays[n]}\n{text.split(weekdays[n])[1].split(f"{week()}{pg}")[1]}')
								else:schedule.append(f'\n{weekdays[n]}\n{text.split(weekdays[n])[1].split(f"{week()}{pg}")[1]}')
								n=n+1
							n=0
							schedule="".join(schedule)
							sender(id, schedule)
						else:sender(id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ø–æ–¥–≥—Ä—É–ø–ø—É\n–ü–≥ ‚Ññ–ø–æ–¥–≥—Ä—É–ø–ø—ã')
				elif msg.split()[0] == "–≥—Ä—É–ø–ø–∞":
					try:
						for gp in grouplist:
							if msg.split()[1]==gp.lower():
								c.execute('UPDATE Users SET groups="%s" WHERE id=%s'%(msg.split()[1].upper(),id))
								if msg.split()[1].find('–∏—Å–ø1')>=0 or msg.split()[1].find('–∏—Å–ø2')>=0:
									thread=1
								else:
									thread=2
								c.execute('UPDATE Users SET thread=%s WHERE id=%s'%(thread,id))
								bd.commit()
								sender(id, f'–¢–µ–ø–µ—Ä—å –í—ã —É—á–∞—Å—Ç–Ω–∏–∫ –≥—Ä—É–ø–ø—ã {msg.split()[1].upper()}')
								break
							elif gp==grouplist[-1]:sender(id, f'–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã: {", ".join(grouplist)}')
					except:sender(id, f'–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã: {", ".join(grouplist)}')
				elif msg.split()[0]=='–∫–∏–∫' and (access==True or check_state(id)==True):
					try:
						if check_admin(int(msg.split()[1].replace('[id',"").split('|')[0]))!=True:
							kick(id,int(msg.split()[1].replace('[id',"").split('|')[0]))
						else:sender(id,'–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
					except:sender(id, '–ù–µ –Ω–∞–π–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
				elif msg.split()[0]=='–∫—É—Ä–∞—Ç–æ—Ä' and access==True:
					try:
						c.execute('UPDATE Users SET state="–ö—É—Ä–∞—Ç–æ—Ä" WHERE id=%d'%int(msg.split()[1].replace('[id',"").split('|')[0]))
						bd.commit()
						FIO(int(msg.split()[1].replace('[id',"").split('|')[0]))
						sender(id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id%s(%s) –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å "–ö—É—Ä–∞—Ç–æ—Ä"'%(msg.split()[1].replace('[id',"").split('|')[0],fullname))
					except:sender(id, '–ù–µ –Ω–∞–π–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
				elif msg.split()[0]=='—Å—Ç–∞—Ä–æ—Å—Ç–∞' and access==True:
					try:
						c.execute('UPDATE Users SET state="–°—Ç–∞—Ä–æ—Å—Ç–∞" WHERE id=%d'%int(msg.split()[1].replace('[id',"").split('|')[0]))
						bd.commit()
						FIO(int(msg.split()[1].replace('[id',"").split('|')[0]))
						sender(id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id%s(%s) –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å "–°—Ç–∞—Ä–æ—Å—Ç–∞"'%(msg.split()[1].replace('[id',"").split('|')[0],fullname))
					except:sender(id, '–ù–µ –Ω–∞–π–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
				elif msg.split()[0]=='–ø–≥':
					try:
						if msg.split()[1]=="1" or msg.split()[1]=="2":
							c.execute('UPDATE Users SET pg=%s WHERE id=%s'%(msg.split()[1],id))
							bd.commit()
							sender(id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ø–æ–¥–≥—Ä—É–ø–ø—É %s'%msg.split()[1])
						else:sender(id, '–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–≥—Ä—É–ø–ø—ã - 1, 2')
					except:sender(id, '–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–≥—Ä—É–ø–ø—ã - 1, 2')
				elif msg.split()[0]=='—Å—Ç—É–¥–µ–Ω—Ç' and (access==True or check_state(id))==True:
					try:check_student(id,int(msg.split()[1].replace('[id',"").split('|')[0]))
					except:sender(id, '–ù–µ –Ω–∞–π–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
				elif msg.split()[0]=='—Å—Ç—É–¥–µ–Ω—Ç—ã' and (access==True or check_state(id)==True):group(id)
except Exception as e:print(e)				